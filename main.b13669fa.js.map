{"version":3,"sources":["scripts/main.js"],"names":["formInputs","document","querySelectorAll","createLabel","input","label","createElement","className","htmlFor","id","innerText","createTextName","name","string","result","i","length","toUpperCase","labels","map","parentElement","append","placeholder"],"mappings":";AAAA,aAsCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApCD,IAAMA,EAAiBC,EAAAA,SAASC,iBAAiB,UAE3CC,EAAc,SAASC,GACrBC,IAAAA,EAAQJ,SAASK,cAAc,SAM9BD,OAJPA,EAAME,UAAY,cAClBF,EAAMG,QAAUJ,EAAMK,GACtBJ,EAAMK,UAAYC,EAAeP,EAAMQ,MAEhCP,GAGT,SAASM,EAAeE,GAGjB,IAFDC,IAAAA,EAAS,GAEJC,EAAIF,EAAOG,OAAS,EAAGD,GAAK,EAAGA,IAEpCD,EADQ,IAANC,EACOF,EAAOE,GAAGE,cAAgBH,EAE/BD,EAAOE,GAAGE,gBAAkBJ,EAAOE,GAC5B,IAAMF,EAAOE,GAAKD,EAElBD,EAAOE,GAAKD,EAKpBA,OAAAA,EAKT,IAFA,IAAMI,EAASlB,EAAWmB,IAAIhB,GAErBY,EAAI,EAAGA,EAAIf,EAAWgB,OAAQD,IACrCf,EAAWe,GAAGK,cAAcC,OAAOH,EAAOH,IAE1Cf,EAAWe,GAAGO,YAAcX,EAAeX,EAAWe,GAAGH","file":"main.b13669fa.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst formInputs = [...document.querySelectorAll('input')];\n\nconst createLabel = function(input) {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.htmlFor = input.id;\n  label.innerText = createTextName(input.name);\n\n  return label;\n};\n\nfunction createTextName(string) {\n  let result = '';\n\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (i === 0) {\n      result = string[i].toUpperCase() + result;\n    } else {\n      if (string[i].toUpperCase() === string[i]) {\n        result = ' ' + string[i] + result;\n      } else {\n        result = string[i] + result;\n      };\n    };\n  };\n\n  return result;\n};\n\nconst labels = formInputs.map(createLabel);\n\nfor (let i = 0; i < formInputs.length; i++) {\n  formInputs[i].parentElement.append(labels[i]);\n\n  formInputs[i].placeholder = createTextName(formInputs[i].name);\n};\n"]}